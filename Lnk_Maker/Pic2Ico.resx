<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="PictureBox1.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="TextBox1.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Button1.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Button2.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Label1.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Button3.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="LinkLabel1.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAFhYAAAEAGABYBgAAFgAAACgAAAAWAAAALAAAAAEAGAAAAAAA2AUAAAAAAAAAAAAAAAAAAAAA
        AACOkJBqbWtqaGeHhH9wamNnXlR8cmh7b2N1aV1mXVCBeG+HgXpzcGtpamZlZWVpa2tmZmZtbW1zc3N1
        dXWEhIR5eXkAAG1vb/3//v///P/++f/47///9f//9f/67f//9P/57f//9//99PHt6P///P3//vb4+P//
        //Pz8/z8/Pf39+7u7nl5eQAAaG1r/P/99vbw+PDp//rx//3y///y///yvKGTYEY4e2dc5tfO///5///5
        8fTy+//+/f//9fX1////////////cHBwAABdZGH5//r///v/+vH/+e7///Tkw7RxTT1IIxWhgHH/+O3/
        //X+9ez49u73/fj6//73+fn6+vr////y8vL39/dlZWUAAGlzbfv/++ro4Prw5v//9PvbznlQQXBEM2I1
        J8SbjP/87///8/706v//+fv//PX8+fv9/f////////b29v39/WpqagAAX2pn8Pbx///4///1/ePTwZyI
        ZDUfd0MsbDgh0qON///u///x//bs///79f388/v6///+//v6+/n5//7//f//XmBhAABeZmb9//707+b/
        +ej//+p7UC+HVCyLUyqBSSCMWjb//+f//+7/9e39///y+//0/v///v3/+fX//v///v/4+/9jaXAAAGNq
        bf3//vjy5///8P/kx4VaM4BJHJVbKohOHX9KH82jgP//6//w5P///urw9/r9//zz7///+f/+/vf2+vX4
        /19mbwAAZmts///89e/k///w9Na5eU8qhlEmmF0vnWI0azYLYzYR/93B///w///3//n2///8oZSM///2
        //76//3++/7/YGZtAABiZ2b///zz7eL//+7/9ttySSiPXTOQWSx/RhmbZDmCTydZLg3/7dP//+v///K+
        raBEMSL/7+P//vj///7//v9eYWYAAGZpZ///+/r06f/56P//66B6WnpNKIpWLZJYLoxTJn9IHYhVLWk8
        F/jPrv3XuVs9IkMrFf//8f//9v/9+f/+/mBhZQAAb3Bs9PXs//7z//fn///p8c+ydEkoilkzl182hEkc
        i1AikFUnjlUojlkuiFUqckYhXT8k///w//vv//rz///+cHBwAABwcGr29Oz///X/9eX/9eP//+a3j3KH
        WTeBTSWbYDOaXCyYWSeQTxyQUBqNTReGUCFfPBv//ef//Oz///f///x4dnUAAGprYv//9//67/vw4v/9
        7P//6v/s0oJXNoVULptkOY9RIY9OG59cJZZQFaVfI5NXI2M9G//75f//8f//9//59G9ragAAZ2Vd///1
        +fXq/PPm//Pj//nl///q/9m7iFo4cj4WnmM1mlsojUoTp2EmoFcZkVMdZ0Ee///q///x//rw///7cW1s
        AAB0cWz///n07+b99ej/++765tT/9uH//+n1zKyWZ0GHUieNUyKVViOlYiuVURaPVCJeORf//+3///L8
        8uj///xvbWwAAF9eWv779v338Prx5/3x5f/04///7v//6NWzlYJZOHdKJIdVK45XKpNZKIZLGYxZLlo4
        G///7f/98f//+P///mpqagAAc3Fw8vHt9/Pu9u/m+O/i///y//TiuqKKcFM4ZEIkfVc1hFo3gFQviFs1
        hVQsglg1X0Mr///y//Ho///7+Pb2aWpuAAB9fX3y8O/z7+r++PH///br3s6aiXZIMx1SOiJZPiRlSC1d
        PyRePSNrSjBlRCpWNyBDLRv/7+P///n///719PhdYGUAAGNiZP7+/vXy7uLc1f/78f//8//x3v//7v//
        7f//7f//7f//7v//8P//8f//7///8v//8///9//79+nk5fv+/291fAAAc3R49/b4///+//z3//ft///x
        ///t///u//Tf//7p///u///y///1//ft//rz///5///4//Tu//7+//7/8/b+XmVuAACSk5dramxdW1qC
        fnlpYFZ5bmCPg3FsXkt/cVuIemd7bVt0aVt4b2Z0bml0b2xxbGl7b2l1a2RqZGVpam5rbXeEipUAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>