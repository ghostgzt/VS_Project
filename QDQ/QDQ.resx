<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TextBox1.Text" xml:space="preserve">
    <value>ldc "ext:lp:lp_NNN"
new java/lang/StringBuffer
dup
invokespecial java/lang/StringBuffer/&lt;init&gt;()V
ldc "ext:lp:"
invokevirtual java/lang/StringBuffer/append(Ljava/lang/String;)Ljava/lang/StringBuffer;
aload_1
invokevirtual java/lang/StringBuffer/append(Ljava/lang/String;)Ljava/lang/StringBuffer;
invokevirtual java/lang/StringBuffer/toString()Ljava/lang/String;
invokevirtual java/lang/String/equals(Ljava/lang/Object;)Z
ifeq BBB
aload_3
ldc "ext:lp:lp_NNN"
invokevirtual p/e(Ljava/lang/String;)V
aload_0
aload_3
ldc "NNN.htm"
invokespecial ah/b(Lp;Ljava/lang/String;)V
goto FFF</value>
  </data>
  <data name="TextBox3.Text" xml:space="preserve">
    <value>ifnonnull FFF
invokestatic p/a()Lp;
astore_3
ldc "ext:lp:lp_help"
new java/lang/StringBuffer
dup
invokespecial java/lang/StringBuffer/&lt;init&gt;()V
ldc "ext:lp:"
invokevirtual java/lang/StringBuffer/append(Ljava/lang/String;)Ljava/lang/StringBuffer;
aload_1
invokevirtual java/lang/StringBuffer/append(Ljava/lang/String;)Ljava/lang/StringBuffer;
invokevirtual java/lang/StringBuffer/toString()Ljava/lang/String;
invokevirtual java/lang/String/equals(Ljava/lang/Object;)Z
ifeq 125
aload_3
ldc "ext:lp:lp_help"
invokevirtual p/e(Ljava/lang/String;)V
aload_0
aload_3
ldc "h.htm"
invokespecial ah/b(Lp;Ljava/lang/String;)V
goto FFF</value>
  </data>
  <metadata name="ToolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="TextBox7.Text" xml:space="preserve">
    <value>ldc "ext:lp:lp_history"
new java/lang/StringBuffer
dup
invokespecial java/lang/StringBuffer/&lt;init&gt;()V
ldc "ext:lp:"
invokevirtual java/lang/StringBuffer/append(Ljava/lang/String;)Ljava/lang/StringBuffer;
aload_1
invokevirtual java/lang/StringBuffer/append(Ljava/lang/String;)Ljava/lang/StringBuffer;
invokevirtual java/lang/StringBuffer/toString()Ljava/lang/String;
invokevirtual java/lang/String/equals(Ljava/lang/Object;)Z
ifeq BBB
aload_0
aload_3
astore_2
astore_1
aload_2
invokevirtual p/c()V
aload_2
bipush 50
invokestatic am/a(I)Ljava/lang/String;
invokevirtual p/d(Ljava/lang/String;)V
aload_2
bipush 13
invokevirtual p/c(I)V
aload_1
invokevirtual ah/a()Lay;
pop
aload_2
invokestatic ay/c(Lp;)V
goto FFF
pop
goto FFF
ldc "ext:lp:lp_about"
new java/lang/StringBuffer
dup
invokespecial java/lang/StringBuffer/&lt;init&gt;()V
ldc "ext:lp:"
invokevirtual java/lang/StringBuffer/append(Ljava/lang/String;)Ljava/lang/StringBuffer;
aload_1
invokevirtual java/lang/StringBuffer/append(Ljava/lang/String;)Ljava/lang/StringBuffer;
invokevirtual java/lang/StringBuffer/toString()Ljava/lang/String;
invokevirtual java/lang/String/equals(Ljava/lang/Object;)Z
ifeq FFF
aload_3
ldc "ext:lp:lp_about"
invokevirtual p/e(Ljava/lang/String;)V
aload_0
aload_3
ldc "ab.htm"
invokespecial ah/b(Lp;Ljava/lang/String;)V
aload_3
areturn</value>
  </data>
  <data name="TextBox8.Text" xml:space="preserve">
    <value>aconst_null
astore_2
aconst_null
astore_3
aload_1
ldc "ext:lp:"
invokevirtual java/lang/String/startsWith(Ljava/lang/String;)Z
ifeq 13
aload_1
bipush 7
invokevirtual java/lang/String/substring(I)Ljava/lang/String;
goto 14
aload_1
astore_1
invokestatic ay/a()Lar;
astore_2
aload_0
invokevirtual ah/a()Lay;
getfield ay/a Ljava/util/Hashtable;
aload_1
aload_2
aload_0
invokestatic m/a(Ljava/util/Hashtable;Ljava/lang/String;Lar;Lah;)Ljava/util/Vector;
astore 4
aconst_null
astore_2
aload 4
ifnull 37
aload 4
invokevirtual java/util/Vector/size()I
ifle 37
aload 4
iconst_0
invokevirtual java/util/Vector/elementAt(I)Ljava/lang/Object;
checkcast ar
astore_2
aload_2
ifnull 90
iconst_2
iconst_4
invokestatic p/a(II)Lp;
dup
astore 4
iconst_1
invokevirtual p/l(I)V
aload 4
new java/lang/StringBuffer
dup
invokespecial java/lang/StringBuffer/&lt;init&gt;()V
ldc "ext:lp:"
invokevirtual java/lang/StringBuffer/append(Ljava/lang/String;)Ljava/lang/StringBuffer;
aload_1
invokevirtual java/lang/StringBuffer/append(Ljava/lang/String;)Ljava/lang/StringBuffer;
invokevirtual java/lang/StringBuffer/toString()Ljava/lang/String;
invokevirtual p/e(Ljava/lang/String;)V
aload 4
dup
getfield p/k B
iconst_4
ior
i2b
putfield p/k B
aload 4
bipush 9
invokevirtual p/c(I)V
aload 4
bipush 14
invokevirtual p/c(I)V
aload 4
getstatic ah/j B
getstatic ah/j I
getstatic ah/m I
getstatic ah/j B
isub
invokevirtual p/a(III)V
aload 4
getstatic ah/l I
getstatic ah/m I
aload 4
getfield p/c S
isub
invokevirtual p/d(II)V
aload_0
getfield ah/a Lay;
aload 4
aload_2
invokevirtual ay/a(Lp;Lar;)V
aload 4
astore_3
aload_2
invokestatic i/b(Lar;)V
goto 102
pop
aload_2
invokestatic i/b(Lar;)V
goto 102
astore_1
aload_2
invokestatic i/b(Lar;)V
aload_1
athrow
aload_3</value>
  </data>
  <metadata name="ToolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>